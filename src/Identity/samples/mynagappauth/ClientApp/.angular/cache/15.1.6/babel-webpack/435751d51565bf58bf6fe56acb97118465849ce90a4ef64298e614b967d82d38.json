{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Welcome, \", ctx_r1.fx[0].username, \"\");\n  }\n}\nfunction FetchDataComponent_div_6_canvas_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"canvas\", 3);\n  }\n  if (rf & 2) {\n    const eff_r4 = ctx.$implicit;\n    i0.ɵɵattribute(\"data-js\", eff_r4);\n  }\n}\nfunction FetchDataComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FetchDataComponent_div_6_canvas_1_Template, 1, 1, \"canvas\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.fx[0].effects);\n  }\n}\nexport class FetchDataComponent {\n  fetch() {\n    this.operationFailed = false;\n    this.http.get(this.baseUrl + 'effects').subscribe(result => {\n      this.fx = result;\n      if (this.fx.username) {\n        this.authenticated = true;\n      } else {\n        this.authenticated = false;\n      }\n    }, error => {\n      this.authenticated = false;\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  toggleRegister() {\n    this.register = !this.register;\n  }\n  submitRegistration(username, password) {\n    this.operationFailed = false;\n    this.http.post(this.baseUrl + '/identity/v1/register', {\n      username,\n      password\n    }).subscribe(_ => {\n      this.authenticated = true;\n      this.fetch();\n    }, error => {\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  login(username, password) {\n    this.operationFailed = false;\n    this.http.post(this.baseUrl + '/identity/v1/login', {\n      username,\n      password\n    }).subscribe(_ => {\n      this.authenticated = true;\n      this.fetch();\n    }, error => {\n      this.authenticated = false;\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.authenticated = false;\n    this.register = false;\n    this.operationFailed = false;\n    this.operationReason = \"\";\n    http.get(baseUrl + 'effects').subscribe(result => {\n      this.fx = result;\n      if (this.fx.username) {\n        this.authenticated = true;\n      }\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"width\", \"800\", \"height\", \"640\", 4, \"ngFor\", \"ngForOf\"], [\"width\", \"800\", \"height\", \"640\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"JavaScript Effects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data protected by auth from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_p_5_Template, 2, 1, \"p\", 1);\n      i0.ɵɵtemplate(6, FetchDataComponent_div_6_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.fx == null ? null : ctx.fx.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.fx.length && ctx.fx[0].username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.fx.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FetchDataComponent","fetch","operationFailed","http","get","baseUrl","subscribe","result","fx","username","authenticated","error","operationReason","toggleRegister","register","submitRegistration","password","post","_","login","constructor","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jeliknes\\source\\repos\\aspnetcore\\src\\identity\\samples\\mynagappauth\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\jeliknes\\source\\repos\\aspnetcore\\src\\identity\\samples\\mynagappauth\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">JavaScript Effects</h1>\r\n\r\n<p>This component demonstrates fetching data protected by auth from the server.</p>\r\n\r\n<p *ngIf=\"!fx?.length\"><em>Loading...</em></p>\r\n\r\n<p *ngIf=\"fx.length && fx[0].username\">Welcome, {{ fx[0].username }}</p>\r\n\r\n<div *ngIf=\"fx.length\">\r\n  <canvas *ngFor=\"let eff of fx[0].effects\" [attr.data-js]=\"eff\" width=\"800\" height=\"640\">\r\n  </canvas>  \r\n</div>\r\n\r\n<script>\r\n    window.fn = () => console.log(\"hi\");\r\n    console.log(\"called\");\r\n</script>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public fx?: Effects;\r\n  public authenticated: boolean = false;\r\n  public register: boolean = false;\r\n  public operationFailed: boolean = false;\r\n  public operationReason: string = \"\";\r\n  public fetch() {\r\n    this.operationFailed = false;\r\n    this.http.get<Effects>(this.baseUrl + 'effects').subscribe(result => {\r\n      this.fx = result;\r\n      if (this.fx.username) {\r\n        this.authenticated = true;\r\n      }\r\n      else {\r\n        this.authenticated = false;\r\n      }\r\n    },\r\n      error => {\r\n        this.authenticated = false;\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  }\r\n  \r\n  public toggleRegister() {\r\n    this.register = !this.register;\r\n  };\r\n\r\n  public submitRegistration(username: string, password: string) {\r\n    this.operationFailed = false;\r\n    this.http.post(this.baseUrl + '/identity/v1/register', {\r\n      username, password\r\n    })\r\n      .subscribe(_ => {\r\n        this.authenticated = true;\r\n        this.fetch();\r\n      }, error => {\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  };\r\n\r\n  public login(username: string, password: string) {\r\n    this.operationFailed = false;\r\n    this.http.post(this.baseUrl + '/identity/v1/login', {\r\n      username, password\r\n    })\r\n      .subscribe(_ => {\r\n        this.authenticated = true;\r\n        this.fetch();\r\n      }, error => {\r\n        this.authenticated = false;\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  };\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    http.get<Effects>(baseUrl + 'effects').subscribe(result => {      \r\n      this.fx = result;\r\n      if (this.fx.username) {\r\n        this.authenticated = true;\r\n      }\r\n    },\r\n      error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Effects {\r\n  username: string;\r\n  effects: string[];  \r\n}\r\n\r\ninterface Register {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface Login {\r\n  username: string;\r\n  password: string;\r\n  cookMode: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}