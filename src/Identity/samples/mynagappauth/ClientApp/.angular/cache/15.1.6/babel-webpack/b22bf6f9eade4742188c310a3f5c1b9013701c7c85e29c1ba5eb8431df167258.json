{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FetchDataComponent_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_4_div_3_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r4 = i0.ɵɵreference(2);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.login(_r4.value.username, _r4.value.password));\n    });\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"Username: \");\n    i0.ɵɵelement(5, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7, \"Password: \");\n    i0.ɵɵelement(8, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 6);\n    i0.ɵɵtext(10, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 7);\n    i0.ɵɵlistener(\"onclick\", function FetchDataComponent_div_4_div_3_Template_button_onclick_11_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.toggleRegister());\n    });\n    i0.ɵɵtext(12, \"Switch to Register\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_div_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 2, 3);\n    i0.ɵɵlistener(\"ngSubmit\", function FetchDataComponent_div_4_div_4_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const _r8 = i0.ɵɵreference(2);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.submitRegistration(_r8.value.username, _r8.value.passwordd));\n    });\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4, \"Username: \");\n    i0.ɵɵelement(5, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7, \"Password: \");\n    i0.ɵɵelement(8, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10, \"Confirm password: \");\n    i0.ɵɵelement(11, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵtext(13, \"Register\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"button\", 7);\n    i0.ɵɵlistener(\"onclick\", function FetchDataComponent_div_4_div_4_Template_button_onclick_14_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.toggleRegister());\n    });\n    i0.ɵɵtext(15, \"Switch to Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"Cool stuff is waiting for authenticated people\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FetchDataComponent_div_4_div_3_Template, 13, 0, \"div\", 1);\n    i0.ɵɵtemplate(4, FetchDataComponent_div_4_div_4_Template, 16, 0, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.register);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.register);\n  }\n}\nfunction FetchDataComponent_div_5_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_div_5_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Welcome, \", ctx_r13.fx.username, \"\");\n  }\n}\nfunction FetchDataComponent_div_5_div_3_canvas_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"canvas\", 10);\n  }\n  if (rf & 2) {\n    const eff_r16 = ctx.$implicit;\n    i0.ɵɵattribute(\"data-js\", eff_r16);\n  }\n}\nfunction FetchDataComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FetchDataComponent_div_5_div_3_canvas_1_Template, 1, 1, \"canvas\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.fx.effects);\n  }\n}\nfunction FetchDataComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FetchDataComponent_div_5_p_1_Template, 3, 0, \"p\", 1);\n    i0.ɵɵtemplate(2, FetchDataComponent_div_5_p_2_Template, 2, 1, \"p\", 1);\n    i0.ɵɵtemplate(3, FetchDataComponent_div_5_div_3_Template, 2, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.fx);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fx && ctx_r1.fx.username);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fx);\n  }\n}\nexport class FetchDataComponent {\n  fetch() {\n    this.operationFailed = false;\n    this.http.get(this.baseUrl + 'effects').subscribe(result => {\n      this.fx = result;\n      if (this.fx.username) {\n        this.authenticated = true;\n      } else {\n        this.authenticated = false;\n      }\n    }, error => {\n      this.authenticated = false;\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  toggleRegister() {\n    console.log(\"clicked\");\n    console.log(this.register);\n    this.register = !this.register;\n  }\n  submitRegistration(username, password) {\n    this.operationFailed = false;\n    this.http.post(this.baseUrl + '/identity/v1/register', {\n      username,\n      password\n    }).subscribe(_ => {\n      this.authenticated = true;\n      this.fetch();\n    }, error => {\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  login(username, password) {\n    this.operationFailed = false;\n    this.http.post(this.baseUrl + '/identity/v1/login', {\n      username,\n      password\n    }).subscribe(_ => {\n      this.authenticated = true;\n      this.fetch();\n    }, error => {\n      this.authenticated = false;\n      this.operationFailed = true;\n      this.operationReason = error;\n    });\n  }\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.authenticated = false;\n    this.register = false;\n    this.operationFailed = false;\n    this.operationReason = \"\";\n    http.get(baseUrl + 'effects').subscribe(result => {\n      this.fx = result;\n      if (this.fx.username) {\n        this.authenticated = true;\n      }\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"name\", \"username\", \"ngModel\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\"], [\"type\", \"submit\"], [3, \"onclick\"], [\"type\", \"password\", \"name\", \"pconfirm\", \"ngModel\", \"\"], [\"width\", \"800\", \"height\", \"640\", \"style\", \"background: black;\", 4, \"ngFor\", \"ngForOf\"], [\"width\", \"800\", \"height\", \"640\", 2, \"background\", \"black\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"JavaScript Effects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data protected by auth from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_div_4_Template, 5, 2, \"div\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_div_5_Template, 4, 3, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.authenticated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authenticated);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FetchDataComponent","fetch","operationFailed","http","get","baseUrl","subscribe","result","fx","username","authenticated","error","operationReason","toggleRegister","console","log","register","submitRegistration","password","post","_","login","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jeliknes\\source\\repos\\aspnetcore\\src\\identity\\samples\\mynagappauth\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\jeliknes\\source\\repos\\aspnetcore\\src\\identity\\samples\\mynagappauth\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">JavaScript Effects</h1>\r\n\r\n<p>This component demonstrates fetching data protected by auth from the server.</p>\r\n\r\n<div *ngIf=\"!authenticated\">\r\n    <h1>Cool stuff is waiting for authenticated people</h1>\r\n    <div *ngIf=\"!register\">\r\n        <form #f=\"ngForm\" (ngSubmit)=\"login(f.value.username, f.value.password)\">\r\n            <div>Username:        <input type=\"text\" name=\"username\" ngModel></div>\r\n            <div>Password:        <input type=\"password\" name=\"password\" ngModel></div>          \r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n        <button (onclick)=\"toggleRegister()\">Switch to Register</button>\r\n    </div>\r\n    <div *ngIf=\"register\">\r\n        <form #f=\"ngForm\" (ngSubmit)=\"submitRegistration(f.value.username, f.value.passwordd)\">\r\n            <div>Username:        <input type=\"text\" name=\"username\" ngModel></div>\r\n            <div>Password:        <input type=\"password\" name=\"password\" ngModel></div>\r\n            <div>Confirm password: <input type=\"password\" name=\"pconfirm\" ngModel></div>\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n        <button (onclick)=\"toggleRegister()\">Switch to Login</button>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"authenticated\">\r\n\r\n    <p *ngIf=\"!fx\"><em>Loading...</em></p>\r\n\r\n    <p *ngIf=\"fx && fx.username\">Welcome, {{ fx.username }}</p>\r\n\r\n    <div *ngIf=\"fx\">\r\n      <canvas *ngFor=\"let eff of fx.effects\" [attr.data-js]=\"eff\" width=\"800\" height=\"640\" style=\"background: black;\">\r\n      </canvas>  \r\n    </div>\r\n\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public fx?: Effects;\r\n  public authenticated: boolean = false;\r\n  public register: boolean = false;\r\n  public operationFailed: boolean = false;\r\n  public operationReason: string = \"\";\r\n  public fetch() {\r\n    this.operationFailed = false;\r\n    this.http.get<Effects>(this.baseUrl + 'effects').subscribe(result => {\r\n      this.fx = result;\r\n      if (this.fx.username) {\r\n        this.authenticated = true;\r\n      }\r\n      else {\r\n        this.authenticated = false;\r\n      }\r\n    },\r\n      error => {\r\n        this.authenticated = false;\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  }\r\n  \r\n  public toggleRegister() {\r\n    console.log(\"clicked\");\r\n    console.log(this.register);\r\n    this.register = !this.register;\r\n  };\r\n\r\n  public submitRegistration(username: string, password: string) {\r\n    this.operationFailed = false;\r\n    this.http.post(this.baseUrl + '/identity/v1/register', {\r\n      username, password\r\n    })\r\n      .subscribe(_ => {\r\n        this.authenticated = true;\r\n        this.fetch();\r\n      }, error => {\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  };\r\n\r\n  public login(username: string, password: string) {\r\n    this.operationFailed = false;\r\n    this.http.post(this.baseUrl + '/identity/v1/login', {\r\n      username, password\r\n    })\r\n      .subscribe(_ => {\r\n        this.authenticated = true;\r\n        this.fetch();\r\n      }, error => {\r\n        this.authenticated = false;\r\n        this.operationFailed = true;\r\n        this.operationReason = error;\r\n      });\r\n  };\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    http.get<Effects>(baseUrl + 'effects').subscribe(result => {      \r\n      this.fx = result;\r\n      if (this.fx.username) {\r\n        this.authenticated = true;\r\n      }\r\n    },\r\n      error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Effects {\r\n  username: string;\r\n  effects: string[];  \r\n}\r\n\r\ninterface Register {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface Login {\r\n  username: string;\r\n  password: string;\r\n  cookMode: boolean;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}